@model TrainingCenterMVC.Models.Courses

@{
    ViewBag.Title = "Create";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <title>Login</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--===============================================================================================-->
    <link rel="icon" type="image/png" href="~/Content/Login/images/icons/favicon.ico" />
    <link href="~/Content/Login/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/Login/fonts/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/Login/fonts/Linearicons-Free-v1.0.0/icon-font.min.css" rel="stylesheet" />
    <link href="~/Content/Login/vendor/animate/animate.css" rel="stylesheet" />
    <link href="~/Content/Login/vendor/css-hamburgers/hamburgers.min.css" rel="stylesheet" />
    <link href="~/Content/Login/vendor/animsition/css/animsition.min.css" rel="stylesheet" />

    <link href="~/Content/Login/vendor/select2/select2.min.css" rel="stylesheet" />

    <link href="~/Content/Login/vendor/daterangepicker/daterangepicker.css" rel="stylesheet" />
    <link href="~/Content/Login/css/main.css" rel="stylesheet" />
    <link href="~/Content/Login/css/util.css" rel="stylesheet" />

    <style>
        #Msg {
            height: 100px;
        }

        #back {
            margin-left: 200px;
            color: orangered;
        }
    </style>

</head>

<body>

    <div class="limiter" style="margin-top:0;">
        <div class="container-login100" style="background-image: url('../../Image/color.jpg');">
            <div class="wrap-login100 p-l-110 p-r-110 p-t-62 p-b-33">

                
@using (Html.BeginForm("Create", "Courses", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                   

                    <span class="login100-form-title p-b-53">
                    Create New
                    </span>




                    <div class="p-t-13 p-b-9">
                        <span class="txt1">
                            NameCourse
                        </span>
                    </div>
                    <div class="wrap-input100 validate-input" data-validate="Password is required">
                        @Html.EditorFor(model => model.NameCourse, new { htmlAttributes = new { @class = "input100" } })
                        @Html.ValidationMessageFor(model => model.NameCourse, "", new { @class = "text-danger" })

                        <span class="focus-input100"></span>
                    </div>

                    <div class="p-t-13 p-b-9">
                        <span class="txt1">
                            Upload Imade
                        </span>
                    </div>
                    <div class="wrap-input100 validate-input" data-validate="Password is required">
                        <input type="file" class="input100" name="upload" />
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })




                        <span class="focus-input100"></span>
                    </div>

                    <div class="p-t-13 p-b-9">
                        <span class="txt1">
                            Price
                        </span>
                    </div>
                    <div class="wrap-input100 validate-input" data-validate="Password is required">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "input100" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })


                        <span class="focus-input100"></span>
                    </div>
                    <div class="p-t-13 p-b-9">
                        <span class="txt1">
                            Duration
                        </span>
                    </div>
                    <div class="wrap-input100 validate-input" data-validate="Password is required">
                        @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { @class = "input100" } })
                        @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
                        <span class="focus-input100"></span>
                    </div>


                    <div class="p-t-13 p-b-9">
                        <span class="txt1">
                            CategoryName
                        </span>
                    </div>
                    <div class="wrap-input100 validate-input" data-validate="Password is required">
                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "input100" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        <span class="focus-input100"></span>
                    </div>


                    <br />


                    <div class="alert alert-danger" id="error-div" style="display:none">
                        <span id="view-error"></span>
                    </div>

                    <div>



                        <div class="container-login100-form-btn m-t-17">
                            <button type="submit" class="login100-form-btn">
                                 Create New
                            </button>


                        </div>
                        @Html.ActionLink("Back to List", "Index", "", new { @id = "back" })
                    </div>


                }
            </div>
        </div>
    </div>
    <br />
    <div id="dropDownSelect1"></div>

    <!--===============================================================================================-->
    <script src="~/Content/Login/vendor/jquery/jquery-3.2.1.min.js"></script>
    <script src="~/Content/Login/vendor/animsition/js/animsition.min.js"></script>

    <script src="~/Content/Login/vendor/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/Content/Login/vendor/select2/select2.js"></script>
    <script src="~/Content/Login/vendor/daterangepicker/daterangepicker.js"></script>
    <script src="~/Content/Login/vendor/daterangepicker/moment.min.js"></script>
    <script src="~/Content/Login/vendor/countdowntime/countdowntime.js"></script>
    <script src="~/Content/Login/js/main.js"></script>



</body>

</html>




<script src="~/Scripts/jquery-1.10.2.js"></script>
<script>

    $(function () {

        $("#save").click(function () {



             if($("#courseimage").val() != "")

        {
            //check if input extention is empty


                 var filename = document.getElementById("courseimage").value;
                 var extentionimage = filename.substr(filename.lastIndexOf('.')+1);
                 var validextention = ['jpg', 'png', 'gif', 'jepg', 'bmp'];
                 if ($.inArray(extentionimage, validextention) == -1) {

                     $("#error-div").fadeIn();
                     $("#view-error").append("please select Picture with valid Extention for job");
                     return false;

                 }


                 //check if image sixe is valid

                 var myfilesize = document.getElementById("courseimage").files[0].size / 1024 / 1024;
                 if (myfilesize > 2) {
                     $("#error-div").fadeIn();
                     $("#view-error").append("please select Valid Size for picture for job");
                     return false;
                 }

             }
        });
    });
</script>



















@*<h2>Create</h2>

@using (Html.BeginForm("Create","Courses",FormMethod.Post,new {enctype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Courses</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NameCourse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameCourse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameCourse, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" class="form-control" name="upload" />
                 @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
