@using TrainingCenterMVC.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}



<!DOCTYPE html>
<html lang="en">

<head>
    <title>Login</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--===============================================================================================-->
    <link rel="icon" type="image/png" href="~/Content/Login/images/icons/favicon.ico" />
    <link href="~/Content/Login/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/Login/fonts/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/Login/fonts/Linearicons-Free-v1.0.0/icon-font.min.css" rel="stylesheet" />
    <link href="~/Content/Login/vendor/animate/animate.css" rel="stylesheet" />
    <link href="~/Content/Login/vendor/css-hamburgers/hamburgers.min.css" rel="stylesheet" />
    <link href="~/Content/Login/vendor/animsition/css/animsition.min.css" rel="stylesheet" />

    <link href="~/Content/Login/vendor/select2/select2.min.css" rel="stylesheet" />

    <link href="~/Content/Login/vendor/daterangepicker/daterangepicker.css" rel="stylesheet" />
    <link href="~/Content/Login/css/main.css" rel="stylesheet" />
    <link href="~/Content/Login/css/util.css" rel="stylesheet" />
   
   </head>

<body>

    <div class="limiter" style="margin-top:0;">
        <div class="container-login100" style="background-image: url('../../Content/Login/images/bg-01.jpg');">
            <div class="wrap-login100 p-l-110 p-r-110 p-t-62 p-b-33">
                @*<form class="login100-form validate-form flex-sb flex-w" id="login100-form" method="GET">*@
@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login100-form", id = "login100-form", role = "form" }))
{
    @Html.AntiForgeryToken()

  

                    <span class="login100-form-title p-b-53">
                        Sign In Now
                    </span>

                    <!--<a href="#" class="btn-face m-b-20">
                        <i class="fa fa-facebook-official"></i>
                        Facebook
                    </a>

                    <a href="#" class="btn-google m-b-20">
                        <img src="images/icons/icon-google.png" alt="GOOGLE">
                        Google
                    </a>-->

    <h3>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </h3>

                    <div class="p-t-31 p-b-9">
                        <span class="txt1">
                            Email
                        </span>
                    </div>
                    <div class="wrap-input100 validate-input" data-validate="Email is required">
                        @*<input class="input100" type="text" name="username" required>*@

                        @Html.TextBoxFor(m => m.Email, new { @class = "input100" })
                        
                        <span class="focus-input100"></span>
                    </div>
                    <h3>    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })</h3>


                    <div class="p-t-13 p-b-9">
                        <span class="txt1">
                            Password
                        </span>

                        <!--<a href="#" class="txt2 bo1 m-l-5">
                            Forgot?
                        </a>-->
                    </div>
                    <div class="wrap-input100 validate-input" data-validate="Password is required">
                        @*<input class="input100" type="password" name="pass" required>*@
                        @Html.PasswordFor(m => m.Password, new { @class = "input100" })
                 

                        <span class="focus-input100"></span>
                       

                    </div>

                    <h3>
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </h3>

                    <div class="container-login100-form-btn m-t-17">
                        <button type="submit" class="login100-form-btn">
                            Sign In
                        </button>
                    </div>

                    <div class="w-full text-center p-t-55">
                        <span class="txt2">
                            Not a member?
                        </span>

                        <a href="~/Account/Register" class="txt2 bo1">
                            Sign up now
                        </a>
                        <p>
                   <a href="~/Account/ForgotPassword">Forget  Password</a>&nbsp;&nbsp;|
                            <a href="~/Account/ResetPassword">Reset  Password</a>

                        </p>

                        
                    </div>
}
            </div>
        </div>
    </div>
    <br />
    <div id="dropDownSelect1"></div>

    <!--===============================================================================================-->
    <script src="~/Content/Login/vendor/jquery/jquery-3.2.1.min.js"></script>
    <script src="~/Content/Login/vendor/animsition/js/animsition.min.js"></script>

    <script src="~/Content/Login/vendor/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/Content/Login/vendor/select2/select2.js"></script>
    <script src="~/Content/Login/vendor/daterangepicker/daterangepicker.js"></script>
    <script src="~/Content/Login/vendor/daterangepicker/moment.min.js"></script>
    <script src="~/Content/Login/vendor/countdowntime/countdowntime.js"></script>
    <script src="~/Content/Login/js/main.js"></script>


  
</body>

</html>





















@*<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>
                @* Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p>*@
            @*}
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>*@

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@